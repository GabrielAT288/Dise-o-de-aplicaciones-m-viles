1. Diseño de la Interfaz Gráfica (XML)

<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <EditText
        android:id="@+id/etName"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Nombre"
        android:inputType="textPersonName"
        android:padding="12dp"/>

    <EditText
        android:id="@+id/etEmail"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Correo electrónico"
        android:inputType="textEmailAddress"
        android:padding="12dp"/>

    <EditText
        android:id="@+id/etPhone"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Teléfono"
        android:inputType="phone"
        android:padding="12dp"/>

    <ImageView
        android:id="@+id/imageProfile"
        android:layout_width="200dp"
        android:layout_height="200dp"
        android:layout_gravity="center"
        android:src="@drawable/im1"
        android:contentDescription="Imagen de perfil"/>

    <Button
        android:id="@+id/btnSubmit"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Enviar"
        android:layout_gravity="center"
        android:padding="12dp"/>

</LinearLayout>

2. Lógica de la Aplicación en Kotlin (MainActivity.kt)
package com.example.formulario

import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.ImageView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class MainActivity : AppCompatActivity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val etName = findViewById<EditText>(R.id.etName)
        val etEmail = findViewById<EditText>(R.id.etEmail)
        val etPhone = findViewById<EditText>(R.id.etPhone)
        val imageProfile = findViewById<ImageView>(R.id.imageProfile)
        val btnSubmit = findViewById<Button>(R.id.btnSubmit)

        btnSubmit.setOnClickListener {
            val name = etName.text.toString().trim()
            val email = etEmail.text.toString().trim()
            val phone = etPhone.text.toString().trim()

            // Validar si los campos están vacíos
            if (name.isEmpty() || email.isEmpty() || phone.isEmpty()) {
                Toast.makeText(this, "Por favor, completa todos los campos", Toast.LENGTH_SHORT).show()
            } else {
                // Cambiar la imagen dinámicamente
                imageProfile.setImageResource(R.drawable.im2) // new_image es el nombre de la nueva imagen en la carpeta drawable
                Toast.makeText(this, "Formulario enviado correctamente", Toast.LENGTH_SHORT).show()
            }
        }
    }
}
<resources>




**Explicación del Código:**
Referencias: El código obtiene referencias a los campos de texto (EditText), la imagen (ImageView), y el botón (Button).
Validación: Cuando el botón es presionado, se extraen los valores de los EditText. Se verifica si alguno de los campos está vacío. Si es así,
se muestra un Toast informando al usuario.
Cambio de imagen: Si todos los campos están llenos, se cambia la imagen que se muestra en el ImageView de manera dinámica usando setImageResource().
Solo asegúrate de agregar la nueva imagen en la carpeta res/drawable.

**3. Estilos**
    <!-- Estilo personalizado para EditText -->
    <style name="CustomEditText">
        <item name="android:background">@android:drawable/editbox_background</item>
        <item name="android:textColor">#000000</item>
        <item name="android:padding">12dp</item>
    </style>

    <!-- Estilo personalizado para Button -->
    <style name="CustomButton">
        <item name="android:backgroundTint">#6200EE</item>
        <item name="android:textColor">#FFFFFF</item>
        <item name="android:padding">12dp</item>
    </style>

    <!-- Estilo personalizado para ImageView -->
    <style name="CustomImageView">
        <item name="android:layout_width">200dp</item>
        <item name="android:layout_height">200dp</item>
        <item name="android:scaleType">centerCrop</item>
    </style>

</resources>
