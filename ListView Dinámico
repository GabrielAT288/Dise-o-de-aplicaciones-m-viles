1. Archivo XML: activity_main.xml
Este es el archivo principal donde se define el ListView y un SearchView

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <!-- Buscador (Opcional) -->
    <SearchView
        android:id="@+id/searchView"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:queryHint="Buscar platillo"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        android:layout_margin="16dp"
        android:visibility="gone" /> <!-- Pon en visible si quieres el buscador -->

    <!-- ListView que contiene los platillos -->
    <ListView
        android:id="@+id/foodListView"
        android:layout_width="0dp"
        android:layout_height="0dp"
        app:layout_constraintTop_toBottomOf="@+id/searchView"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintEnd_toEndOf="parent"/>

</androidx.constraintlayout.widget.ConstraintLayout>
---------------------------------------------------------------------------------------------------------
2. Archivo XML: list_item_food.xml
Este archivo representa cada ítem en el ListView, mostrando el nombre del platillo, el país de origen y el ícono.


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:padding="16dp">

    <!-- Imagen del platillo -->
    <ImageView
        android:id="@+id/foodIcon"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginEnd="16dp" />

    <!-- Contenedor para el nombre y el país de origen -->
    <LinearLayout
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:orientation="vertical">

        <TextView
            android:id="@+id/foodName"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textStyle="bold"
            android:textSize="18sp" />

        <TextView
            android:id="@+id/foodCountry"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />
    </LinearLayout>
</LinearLayout>
-------------------------------------------------------------------------------------------------------
2. Archivo XML: list_item_food.xml


Este archivo representa cada ítem en el ListView, mostrando el nombre del platillo, el país de origen y el ícono.


<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="horizontal"
    android:padding="16dp">

    <!-- Imagen del platillo -->
    <ImageView
        android:id="@+id/foodIcon"
        android:layout_width="50dp"
        android:layout_height="50dp"
        android:layout_marginEnd="16dp" />

    <!-- Contenedor para el nombre y el país de origen -->
    <LinearLayout
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:layout_weight="1"
        android:orientation="vertical">

        <TextView
            android:id="@+id/foodName"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textStyle="bold"
            android:textSize="18sp" />

        <TextView
            android:id="@+id/foodCountry"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content" />
    </LinearLayout>
</LinearLayout>

-----------------------------------------------------------------------------------------------------------

3. Archivo XML: dialog_food.xml
Este archivo define el contenido del diálogo que aparece al seleccionar un platillo.

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="wrap_content"
    android:layout_height="wrap_content"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- Imagen del platillo en el diálogo -->
    <ImageView
        android:id="@+id/foodImageView"
        android:layout_width="200dp"
        android:layout_height="200dp"
        android:layout_gravity="center" />

    <!-- Descripción del platillo -->
    <TextView
        android:id="@+id/foodDescription"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:textSize="16sp" />
</LinearLayout>

-----------------------------------------------------------------------------------------------

4. MainActivity.kt
Este es el archivo MainActivity donde se maneja la lógica de la lista, el diálogo y la opción de compartir la información del platillo.

package com.example.foodlist

import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.*
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity

data class Food(
    val name: String,
    val country: String,
    val imageResId: Int,
    val description: String
)

class FoodAdapter(context: Context, private val foods: List<Food>) : ArrayAdapter<Food>(context, 0, foods) {
    override fun getView(position: Int, convertView: View?, parent: ViewGroup): View {
        val view = convertView ?: LayoutInflater.from(context).inflate(R.layout.list_item_food, parent, false)

        val food = foods[position]
        val nameTextView = view.findViewById<TextView>(R.id.foodName)
        val countryTextView = view.findViewById<TextView>(R.id.foodCountry)
        val iconImageView = view.findViewById<ImageView>(R.id.foodIcon)

        nameTextView.text = food.name
        countryTextView.text = food.country
        iconImageView.setImageResource(food.imageResId)

        return view
    }
}

class MainActivity : AppCompatActivity() {
    private lateinit var foodListView: ListView

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // Lista de comidas típicas
        val foods = listOf(
    Food("Sushi", "Japón", R.drawable.sushi, "Un plato tradicional japonés a base de arroz y pescado."),
    Food("Tacos", "México", R.drawable.tacos, "Deliciosos tacos rellenos de carne y salsa."),
    Food("Pizza", "Italia", R.drawable.pizza, "Una famosa comida italiana a base de masa, salsa y queso."),
    Food("Paella", "España", R.drawable.paella, "Un plato de arroz con mariscos típico de España."),
    Food("Ceviche", "Perú", R.drawable.ceviche, "Un plato de pescado crudo marinado con limón."),
    Food("Croissant", "Francia", R.drawable.croissant, "Un delicioso pan de origen francés en forma de media luna."),
    Food("Bratwurst", "Alemania", R.drawable.bratwurst, "Salchicha alemana a la parrilla servida con mostaza."),
    Food("Poutine", "Canadá", R.drawable.poutine, "Papas fritas cubiertas con salsa de carne y queso."),
    Food("Dim Sum", "China", R.drawable.dimsum, "Pequeñas porciones de diferentes platillos chinos."),
    Food("Biryani", "India", R.drawable.biryani, "Un plato de arroz mezclado con especias, carne y vegetales."),
    Food("Feijoada", "Brasil", R.drawable.feijoada, "Un guiso de frijoles negros con cerdo y carne de res."),
    Food("Hamburguesa", "Estados Unidos", R.drawable.hamburguesa, "Un clásico sándwich de carne molida con pan, queso y vegetales."),
    Food("Shawarma", "Líbano", R.drawable.shawarma, "Carne asada en tiras servida en pan pita con vegetales y salsa."),
    Food("Moussaka", "Grecia", R.drawable.moussaka, "Un plato griego con capas de berenjena, carne y salsa bechamel."),
    Food("Pho", "Vietnam", R.drawable.pho, "Una sopa de fideos de arroz con carne y hierbas frescas."),
    Food("Goulash", "Hungría", R.drawable.goulash, "Un estofado de carne con paprika, típico de la cocina húngara."),
    Food("Boeuf Bourguignon", "Francia", R.drawable.boeuf_bourguignon, "Un guiso de carne cocida en vino tinto, típico de la región de Borgoña."),
    Food("Pad Thai", "Tailandia", R.drawable.padthai, "Fideos salteados con huevo, tofu y camarones, aderezados con salsa de tamarindo."),
    Food("Kimchi", "Corea del Sur", R.drawable.kimchi, "Un plato de col fermentada con especias, acompañante tradicional coreano."),
    Food("Churrasco", "Argentina", R.drawable.churrasco, "Carne asada a la parrilla, un platillo típico del asado argentino.")
        )

        // Inicializa el ListView
        foodListView = findViewById(R.id.foodListView)
        val adapter = FoodAdapter(this, foods)
        foodListView.adapter = adapter

        // Maneja los clics en los elementos del ListView
        foodListView.setOnItemClickListener { _, _, position, _ ->
            showFoodDialog(foods[position])
        }
    }

    // Función para mostrar el diálogo con información del platillo
    private fun showFoodDialog(food: Food) {
        val dialogView = layoutInflater.inflate(R.layout.dialog_food, null)
        val imageView = dialogView.findViewById<ImageView>(R.id.foodImageView)
        val descriptionTextView = dialogView.findViewById<TextView>(R.id.foodDescription)

        imageView.setImageResource(food.imageResId)
        descriptionTextView.text = food.description

        val dialog = AlertDialog.Builder(this)
            .setTitle(food.name)
            .setView(dialogView)
            .setPositiveButton("Compartir") { _, _ ->
                shareFoodInfo(food)
            }
            .setNegativeButton("Cerrar", null)
            .create()

        dialog.show()
    }

    // Función para compartir la información del platillo
    private fun shareFoodInfo(food: Food) {
        val shareIntent = Intent(Intent.ACTION_SEND).apply {
            type = "text/plain"
            putExtra(Intent.EXTRA_TEXT, "${food.name} - ${food.description}")
        }
        startActivity(Intent.createChooser(shareIntent, "Compartir via"))
    }
}

--------------------------------------------------------------------------------------------------------------------

5. Recursos de imágenes (res/drawable):
sushi.png
tacos.png
pizza.png
paella.png
ceviche.png
croissant.png
bratwurst.png
poutine.png
dimsum.png
biryani.png
feijoada.png
hamburguesa.png
shawarma.png
moussaka.png
pho.png
goulash.png
boeuf_bourguignon.png
padthai.png
kimchi.png
churrasco.png
















